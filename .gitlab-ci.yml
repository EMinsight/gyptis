
image: gyptis/gyptis:latest


include:
  - template: Code-Quality.gitlab-ci.yml

stages:
  - badge
  - zenodo
  - trigdoc
  - trigdocker
  - test
  
  

badge:
  stage: badge
  script:
    - echo "collecting stas for badges"
    - commits=`git rev-list --all --count`
    - latest_release_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
    - echo "{\"commits\":\"$commits\", \"release_tag"\:\"$latest_release_tag\"}" > badges.json
  artifacts:
    paths:
        - badges.json


container:
  stage: trigdocker
  trigger: gyptis/docker
  only:
    - master
  

staging:
  stage: trigdoc
  trigger: gyptis/gyptis.gitlab.io
  only:
    - master


test:
  stage: test
  script:
    - source ~/.bashrc
    - pip install -e .
    - pip install -r dev/requirements.txt
    - make test
    - coverage xml
  artifacts:
    reports:
      cobertura: coverage.xml
  only:
    - master

send-snapshot:
  stage: zenodo
  script:
    - if [[ ! $CI_COMMIT_TAG =~ ^v?[0-9]+\.[0-9]+ ]]; then exit 0; fi
    - pip install gitlab2zenodo
    - git archive --format zip --output ${CI_COMMIT_TAG#v}.zip ${CI_COMMIT_TAG}
    - g2z-send -p -m .zenodo.json ${CI_COMMIT_TAG#v}.zip
  only:
    - tags
