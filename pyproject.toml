[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gyptis"
version = "1.1.2"
description = "Computational Photonics in Python"
readme = "README.rst"
license = {text = "MIT"}
authors = [
    {name = "Benjamin Vial", email = "benjamin.vial84@gmail.com"}
]
requires-python = ">=3.10,<3.14"
keywords = [
    "finite element method",
    "diffraction",
    "scattering",
    "optics",
    "photonics",
    "metamaterials",
    "modal analysis"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics"
]
dependencies = [
    "numpy",
    "scipy",
    "matplotlib",
    "pyvista",
    "sympy",
    "dolfin-adjoint",
    "meshio",
    "joblib",
    "psutil",
    "ipython",
    "loguru"
]

[project.urls]
Code = "https://gitlab.com/gyptis/gyptis"
Documentation = "https://gyptis.gitlab.io"
Issues = "https://gitlab.com/gyptis/gyptis/issues"


[project.optional-dependencies]
docs = [
    "sphinx",
    "pydata-sphinx-theme",
    "sphinx_gallery",
    "sphinx-copybutton",
    "memory_profiler",
    "numpydoc",
    "sphinxcontrib-svg2pdfconverter",
    "sphinxcontrib-bibtex",
    "matplotlib",
    "beautifulsoup4"
]
dev = [
    "pip",
    "setuptools",
    "wheel",
    "build",
    "flake8",
    "black",
    "twine",
    "isort",
    "radon",
    "pydocstyle",
    "pylint",
    "pylint-json2html",
    "python-gitlab"
]
test = [
    "pytest",
    "pytest-cov",
    "pytest-datadir",
    "pytest-sugar",
    "pytest-xdist[psutil]",
    "coverage"
]
mesh = ["gmsh"]
opt = ["nlopt"]
full = ["gyptis[docs]", "gyptis[dev]", "gyptis[test]", "gyptis[mesh]", "gyptis[opt]"]

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.cpp"]